
CREATE TABLE IF NOT EXISTS public.calendar (
	"Date"	TEXT NOT NULL,
	CONSTRAINT pk_calendar PRIMARY KEY ("Date")
);

CREATE TABLE IF NOT EXISTS public.categories
 (
	"ProductSubcategoryKey"	INTEGER NOT NULL,
	"SubcategoryName"	TEXT NOT NULL,
	"ProductCategoryKey"	INTEGER NOT NULL,
	"CategoryName"	TEXT NOT NULL,
	CONSTRAINT pk_categories PRIMARY KEY ("ProductSubcategoryKey")
);

CREATE TABLE IF NOT EXISTS public.customers
(
    "CustomerKey" integer NOT NULL,
    "Prefix" character varying COLLATE pg_catalog."default",
    "FirstName" character varying COLLATE pg_catalog."default" NOT NULL,
    "LastName" character varying COLLATE pg_catalog."default" NOT NULL,
    "BirthDate" character varying COLLATE pg_catalog."default" NOT NULL,
    "MaritalStatus" character varying COLLATE pg_catalog."default" NOT NULL,
    "Gender" character varying COLLATE pg_catalog."default",
    "EmailAddress" character varying COLLATE pg_catalog."default" NOT NULL,
    "AnnualIncome" integer NOT NULL,
    "TotalChildren" integer NOT NULL,
    "EducationLevel" character varying COLLATE pg_catalog."default" NOT NULL,
    "Occupation" character varying COLLATE pg_catalog."default" NOT NULL,
    "HomeOwner" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_customers PRIMARY KEY ("CustomerKey")
);

CREATE TABLE IF NOT EXISTS public.products
(
    "ProductKey" integer NOT NULL,
    "ProductSubcategoryKey" integer NOT NULL UNIQUE,
    "ProductSKU" character varying COLLATE pg_catalog."default" NOT NULL,
    "ProductName" character varying COLLATE pg_catalog."default" NOT NULL,
    "ModelName" character varying COLLATE pg_catalog."default" NOT NULL,
    "ProductDescription" character varying COLLATE pg_catalog."default" NOT NULL,
    "ProductColor" character varying COLLATE pg_catalog."default",
    "ProductSize" character varying COLLATE pg_catalog."default" NOT NULL,
    "ProductStyle" character varying COLLATE pg_catalog."default" NOT NULL,
    "ProductCost" integer NOT NULL,
    "ProductPrice" integer NOT NULL,
    PRIMARY KEY ("ProductKey"),
	CONSTRAINT "fk_products_ProductSubcategoryKey" FOREIGN KEY ("ProductSubcategoryKey")
        REFERENCES public.categories ("ProductSubcategoryKey") MATCH SIMPLE
        
);

CREATE TABLE IF NOT EXISTS public.territories
(
	"SalesTerritoryKey"	INTEGER NOT NULL UNIQUE,
	"Region"	TEXT NOT NULL,
	"Country"	TEXT NOT NULL,
	"Continent"	TEXT NOT NULL,
	 CONSTRAINT pk_territories PRIMARY KEY ("SalesTerritoryKey")
);

CREATE TABLE IF NOT EXISTS public.returns
(
	"ReturnDate"	TEXT NOT NULL,
	"TerritoryKey"	INTEGER NOT NULL,
	"ProductKey"	INTEGER NOT NULL,
	"ReturnQuantity"	INTEGER NOT NULL,
	CONSTRAINT "fk_returns_ProductKey" FOREIGN KEY ("ProductKey")
        REFERENCES public.products ("ProductKey") MATCH SIMPLE,
    	CONSTRAINT "fk_returns_TerritoryKey" FOREIGN KEY ("TerritoryKey")
        REFERENCES public.territories ("SalesTerritoryKey") MATCH SIMPLE
        
);

CREATE TABLE IF NOT EXISTS public.combined_sales
(
	"SaleId" INTEGER NOT NULL,
	"OrderDate"	TEXT NOT NULL,
	"StockDate"	TEXT NOT NULL,
	"OrderNumber"	TEXT NOT NULL,
	"CustomerKey"	INTEGER NOT NULL,
	"ProductKey"	INTEGER NOT NULL,
	"SalesTerritoryKey"	INTEGER NOT NULL,
	"OrderLineItem"	INTEGER NOT NULL,
	"OrderQuantity"	INTEGER NOT NULL,
	PRIMARY KEY ("SaleId"),
	CONSTRAINT "fk_combined_sales_ProductKey" FOREIGN KEY ("ProductKey")
        REFERENCES public.products ("ProductKey"),
        CONSTRAINT "fk_combined_sales_CustomerKey" FOREIGN KEY ("CustomerKey")
        REFERENCES public.customers ("CustomerKey"),
       	CONSTRAINT "fk_combined_sales_OrderDate" FOREIGN KEY ("OrderDate")
        REFERENCES public.calendar ("Date")  
	   
)


